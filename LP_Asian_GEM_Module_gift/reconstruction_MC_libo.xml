<?xml version="1.0" encoding="us-ascii"?>
<!-- ?xml-stylesheet type="text/xsl" href="http://ilcsoft.desy.de/marlin/marlin.xsl"? -->
<!-- ?xml-stylesheet type="text/xsl" href="marlin.xsl"? -->

<!--
============================================================================================================================
   Steering File generated by Marlin GUI on Sun Mar 21 14:56:28 2010

   WARNING: - Please be aware that comments made in the original steering file were lost.
            - Processors that are not installed in your Marlin binary lost their parameter's descriptions and types as well.
            - Extra parameters that aren't categorized as default in a processor lost their description and type.
============================================================================================================================
-->


<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">

   <execute>
      <processor name="MyAIDAProcessor"/>
      <processor name="MyConditionsProcessor"/>
      <processor name="MyTrackerRawDataToDataConverterProcessor"/>
      <processor name="MyADCPulseConverterProcessor"/>
      <processor name="MyChannelMappingProcessor"/>
      <processor name="MyRowBasedHitFinderProcessor"/>
      <processor name="MyTrackMakingKalmanFilterProcessor"/>
      <processor name="MyLCIOOutputProcessor"/>
   </execute>

   <global>
      <parameter name="LCIOInputFiles"> TPCRawData.slcio </parameter>
      <parameter name="GearXMLFile" value="gear_LP_TPC_GEM_7module.xml"/>
      <parameter name="MaxRecordNumber" value="1001" />  
      <parameter name="SkipNEvents" value="0"/>
      <parameter name="SupressCheck" value="false"/>
      <parameter name="Verbosity" value="MESSAGE"/>
   </global>

 <processor name="MyAIDAProcessor" type="AIDAProcessor">
 <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
  <!-- compression of output file 0: false >0: true (default) -->
  <parameter name="Compress" type="int">1 </parameter>
  <!-- filename without extension-->
  <parameter name="FileName" type="string">aida_file_7GEM </parameter>
  <!-- type of output file xml (default) or root ( only OpenScientist)-->
  <parameter name="FileType" type="string"> root  </parameter>
 </processor>

 <processor name="MyConditionsProcessor" type="ConditionsProcessor">
 <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
  <!--Initialization of a conditions database handler-->
  <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
  <!--Initialization of a conditions db file handler-->
  <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
  <!--Initialization string for conditions database-->
  <parameter name="DBInit" type="string" value="localhost:lccd_test:calvin:hobbes"/>
  <!--Initialization of a data file handler-->
  <parameter name="DataFileHandler" type="StringVec"> TPCPedestal TPCChannelMapping </parameter>
  <!--Initialization of a simple conditions file handler-->
  <!--parameter name="SimpleFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
</processor>

 <processor name="MyTrackerRawDataToDataConverterProcessor" type="TrackerRawDataToDataConverterProcessor">
 <!--TrackerRawDataToDataConverterProcessor converts the TrackerRawData to TrackerData without processing the values-->
  <!--Name of the input collection-->
  <parameter name="InputCollectionName" type="string" lcioInType="TrackerRawData"> TPCRawData </parameter>
  <!--Name of the output collection-->
  <parameter name="OutputCollectionName" type="string" lcioOutType="TrackerData"> TPCData </parameter>
  <!--if not 0 the output collection is set transient-->
  <parameter name="SetOutputTransient" type="bool" value="0"/>
</processor>

 <processor name="MyADCPulseConverterProcessor" type="ADCPulseConverterProcessor">
 <!--ADCPulseConverterProcessor:  Convert zero-suppressed ADC raw data to pulses-->
  <!--Name of the input TrackerData collection-->
  <parameter name="InputCollectionName" type="string" lcioInType="TrackerData"> TPCData </parameter>
  <!--Name of the output TrackerPulse collection-->
  <parameter name="OutputTrackerPulseCollectionName" type="string" lcioOutType="TrackerPulse"> TPCPulses </parameter>
  <!--if not 0 the ADC spectrum will be stored for all pulses-->
  <parameter name="ForceSpectrumSave" type="int" value="1"/>
  <!--if not 0 the output collection is set transient-->
  <parameter name="SetOutputTransient" type="int" value="0"/>
</processor>

 <processor name="MyChannelMappingProcessor" type="ChannelMappingProcessor">
 <!--ChannelMappingProcessor changes cellID0 to map from hardware channel numbers to sowftware/logical channel numbers.-->
  <!--Name of the input collection-->
  <parameter name="InputCollectionName" type="string" lcioInType="TrackerPulse"> TPCPulses </parameter>
  <!--Name of the collection with the mapping-->
  <parameter name="ChannelMappingCollectionName" type="string" value="TPCChannelMapping"/>
  <!--Optional: Name of output collection-->
  <parameter name="OutputCollectionName" type="string" value="TPCPulsesMapped"/>
  <!--if not 0 the output collection is set transient (only if OutputCollectionName defined)-->
  <parameter name="SetOutputTransient" type="int" value="0"/>
</processor>

 <processor name="MyRowBasedHitFinderProcessor" type="RowBasedHitFinderProcessor">
 <!--RowBasedHitFinderProcessor calculates TrackerHits from TrackerPulses-->
  <!--Name of the input TrackerPulses collection-->
  <parameter name="InputTrackerPulses" type="string" lcioInType="TrackerPulse"> TPCPulsesMapped </parameter>
  <!--Name of the output TrackerHits collection-->
  <parameter name="OutputTrackerHits" type="string" lcioOutType="TrackerHit"> TPCHits </parameter>
  <!--Optional: The charge conversion factor from ADC values to primary electrons-->
  <parameter name="ChargeConversionFactorOverride" type="float" value="1"/>
  <!--Optional: the gear pad indices of dead channels-->
  <parameter name="DeadPadsOverride" type="IntVec"> -999 </parameter>
  <!--Maximum number of dead pads in hit (default: 1)-->
  <parameter name="MaxDeadChannelsOverride" type="int" value="1"/>
  <!--Maximum number of empty consecuitve pads in hit (default: 1)-->
  <parameter name="MaxEmptyPadsOverride" type="int" value="1"/>
  <!--Maximum time between pulses in a hit in ns (default: 200.)-->
  <parameter name="MaxTimeSpreadOverride" type="float" value="200"/>
  <!--Minimum size of hit / Minimum number of Pads (default: 1)-->
  <parameter name="MinHitSizeOverride" type="int" value="1"/>
  <!--Minimum size of the maximum slice value of the maximal pulse (in charge) in a hit.-->
  <parameter name="MinMaxPulseSliceHeightOverride" type="float" value="12"/>
  <!--if not 0 the output hits collection is set transient (default: 0)-->
  <parameter name="SetOutputHitsTransient" type="bool" value="false"/>
  <!--Optional: Set drift velocity in case there is no conditions data in mm/mu s-->
  <parameter name="UseGlobalCoordinates" type="bool">true </parameter>
  <parameter name="VDriftOverride" type="float" value="45"/>
</processor>

 <processor name="MyTrackMakingKalmanFilterProcessor" type="TrackMakingKalmanFilterProcessor">
 <!--For simple track finding and fitting by Kalman filter!-->
  <!--Name of the Input TrackerHits collection-->
  <parameter name="InputTrackerHits" type="string" lcioInType="TrackerHit"> TPCHits </parameter>
  <!--Name of the output Tracks collection-->
  <parameter name="OutputTracks" type="string" lcioOutType="Track"> TPCTracks </parameter>
  <!--Maximum number of subsequnetly missing hits (default: 1)-->
  <parameter name="MaxSkipRows" type="int" value="1 "/>
  <!--Minimum number of hits on track (default: 15)-->
  <parameter name="MinTrackHits" type="int" value="15"/>
  <!--if not 0 the output hits collection is set transient (default: 0)-->
  <parameter name="SetOutputHitsTransient" type="int" value="0"/>
  <!--if not 0 the output trackscollection is set transient (default: 0)-->
  <parameter name="SetOutputTrackCandidatesTransient" type="int" value="0"/>
  <!--Track type (default: 1 0=straight line 1=helix)-->
  <parameter name="TrackType" type="int" value="1"/>
</processor>

 <processor name="MyLCIOOutputProcessor" type="LCIOOutputProcessor">
 <!--Writes the current event to the specified LCIO outputfile. Needs to be the last ActiveProcessor.-->
  <!--drops the named collections from the event-->
  <!--parameter name="DropCollectionNames" type="StringVec"> TPCHits HCalHits </parameter-->
  <!--drops all collections of the given type from the event-->
  <!--parameter name="DropCollectionTypes" type="StringVec"> SimTrackerHit SimCalorimeterHit </parameter-->
  <!-- write complete objects in subset collections to the file (i.e. ignore subset flag)-->
  <!--parameter name="FullSubsetCollections" type="StringVec" value="MCParticlesSkimmed"/-->
  <!--force keep of the named collections - overrules DropCollectionTypes (and DropCollectionNames)-->
  <!--parameter name="KeepCollectionNames" type="StringVec" value="MyPreciousSimTrackerHits"/-->
  <!-- name of output file -->
  <parameter name="LCIOOutputFile" type="string" value="TPCTracks.slcio"/>
  <!--write mode for output file:  WRITE_APPEND or WRITE_NEW-->
  <parameter name="LCIOWriteMode" type="string" value="WRITE_NEW"/>
  <!--will split output file if size in kB exceeds given value - doesn't work with APPEND and NEW-->
  <!--parameter name="SplitFileSizekB" type="int" value="1992294"/-->
</processor>

</marlin>
