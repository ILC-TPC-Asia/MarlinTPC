<?xml version="1.0" encoding="us-ascii"?>
<!-- ?xml-stylesheet type="text/xsl" href="http://ilcsoft.desy.de/marlin/marlin.xsl"? -->
<!-- ?xml-stylesheet type="text/xsl" href="marlin.xsl"? -->

<!--
============================================================================================================================
   Steering File generated by Marlin GUI on Sun Mar 21 14:56:28 2010

   WARNING: - Please be aware that comments made in the original steering file were lost.
            - Processors that are not installed in your Marlin binary lost their parameter's descriptions and types as well.
            - Extra parameters that aren't categorized as default in a processor lost their description and type.
============================================================================================================================
-->


<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">

   <execute>
      <processor name="MyAIDAProcessor"/>
      <processor name="MyConditionsProcessor"/>
      <processor name="MyTrackerRawDataToDataConverterProcessor"/>
      <!--processor name="MyADCPulseConverterProcessor"/-->
      <processor name="MyPulseFinderProcessor"/> <!--fix me-->
      <processor name="MyChannelMappingProcessor"/>
      <processor name="MyRowBasedHitFinderProcessor"/><!--fix me-->
      <processor name="MyTrackMakingKalmanFilterProcessor"/><!--fix me-->
      <processor name="MyRootFileProcessor"/><!--make nTuple fix me-->
      <!--processor name="MyLCIOOutputProcessor"/-->
   </execute>

   <global>
      <!--parameter name="LCIOInputFiles"> TPCRawData.slcio </parameter-->
      <parameter name="LCIOInputFiles"> /proj/cdc/data/altro/desy/readout-19972.000.slcio </parameter>
      <!--parameter name="GearXMLFile" value="gear_LP_TPC_GEM_7module.xml"/-->
      <parameter name="GearXMLFile" value="gear_LP_TPC_GEM_7module_2012_mod.xml"/>
      <parameter name="MaxRecordNumber" value="2000" />  
      <parameter name="SkipNEvents" value="0"/>
      <parameter name="SupressCheck" value="false"/>
      <!--parameter name="Verbosity" options="DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT"> DEBUG  </parameter-->
      <parameter name="Verbosity" value="MESSAGE3"/>
   </global>

 <processor name="MyAIDAProcessor" type="AIDAProcessor">
 <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
  <!-- compression of output file 0: false >0: true (default) -->
  <parameter name="Compress" type="int">1 </parameter>
  <!-- filename without extension-->
  <parameter name="FileName" type="string">r19972 </parameter>
  <!-- type of output file xml (default) or root ( only OpenScientist)-->
  <parameter name="FileType" type="string"> root  </parameter>
</processor>

 <processor name="MyConditionsProcessor" type="ConditionsProcessor">
 <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
  <!--Initialization of a conditions database handler-->
  <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
  <!--Initialization of a conditions db file handler-->
  <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
  <!--Initialization string for conditions database-->
  <parameter name="DBInit" type="string" value="localhost:lccd_test:calvin:hobbes"/>
  <!--Initialization of a data file handler-->
  <!--parameter name="DataFileHandler" type="StringVec"> TPCPedestal TPCChannelMapping </parameter-->
  <!--parameter name="SimpleFileHandler" type="StringVec">TPCChannelMapping TPCChannelMapping_090324_7GEM.slcio TPCChannelMapping  </parameter-->
  <!--parameter name="SimpleFileHandler" type="StringVec">TPCChannelMapping TPCChannelMapping_100912_7GEM.slcio TPCChannelMapping  </parameter-->
  <!--parameter name="SimpleFileHandler" type="StringVec">TPCChannelMapping TPCChannelMapping_20121207_7GEM.slcio TPCChannelMapping  </parameter-->
  <parameter name="SimpleFileHandler" type="StringVec">TPCChannelMapping TPCChannelMapping_20161109_7GEM.slcio TPCChannelMapping  </parameter>
  <!--Initialization of a simple conditions file handler-->
  <!--parameter name="SimpleFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
</processor>

 <processor name="MyTrackerRawDataToDataConverterProcessor" type="TrackerRawDataToDataConverterProcessor">
 <!--TrackerRawDataToDataConverterProcessor converts the TrackerRawData to TrackerData without processing the values-->
  <!--Name of the input collection-->
  <!--parameter name="InputCollectionName" type="string" lcioInType="TrackerRawData"> TPCRawData </parameter-->
  <parameter name="InputCollectionName" type="string" lcioInType="TrackerRawData">AltroRawData </parameter>
  <!--Name of the output collection-->
  <!--parameter name="OutputCollectionName" type="string" lcioOutType="TrackerData"> TPCData </parameter-->
  <parameter name="OutputCollectionName" type="string" lcioOutType="TrackerData">TPCConvertedRawData </parameter>
  <!--if not 0 the output collection is set transient-->
  <parameter name="SetOutputTransient" type="bool" value="1"/>
</processor>

 <processor name="MyADCPulseConverterProcessor" type="ADCPulseConverterProcessor">
 <!--ADCPulseConverterProcessor:  Convert zero-suppressed ADC raw data to pulses-->
  <!--Name of the input TrackerData collection-->
  <!--parameter name="InputCollectionName" type="string" lcioInType="TrackerData"> TPCData </parameter-->
  <parameter name="InputCollectionName" type="string" lcioInType="TrackerData">TPCConvertedRawData </parameter>
  <!--Name of the output TrackerPulse collection-->
  <parameter name="OutputTrackerPulseCollectionName" type="string" lcioOutType="TrackerPulse"> TPCPulses </parameter>
  <!--if not 0 the ADC spectrum will be stored for all pulses-->
  <parameter name="ForceSpectrumSave" type="int" value="1"/>
  <!--if not 0 the output collection is set transient-->
  <parameter name="SetOutputTransient" type="int" value="0"/>
</processor>

 <processor name="MyPulseFinderProcessor" type="PulseFinderProcessor">
 <!--PulseFinderProcessor: finds pulses out of the raw data and calculate the time and charge (in FADC) information-->
  <!--If set to true, multiple pulses will be split by detecting a change in curvature of the adc values-->
  <parameter name="DoMultiplePulseSplitting" type="bool">true </parameter>
  <!--if true the ADC spectrum will be stored for all pulses-->
  <parameter name="ForceSpectrumSave" type="bool">true </parameter>
  <!--Name of the input TrackerData collection-->
  <parameter name="InputCollectionName" type="string" lcioInType="TrackerData"> TPCConvertedRawData </parameter>
  <!--maximum number of the adc spectrum; to determine wether a pulse is maxed out-->
  <!-- parameter name="MaximumADCValue" type="float">255 </parameter -->
  <parameter name="MaximumADCValueOverride" type="float">1024 </parameter>
  <!--Declares the minimal height of the maximum entry of a pulse in ADC counts.-->
  <!--parameter name="MinimumPulseHeight" type="float">8 </parameter-->
  <parameter name="MinimumPulseHeight" type="float">3 </parameter> <!--fix me-->
  <!--Declares the minimal length of a pulse in time bins above the thresholds.-->
  <!--parameter name="MinimumPulseLength" type="int">3 </parameter-->
  <!--<parameter name="MinimumPulseLength" type="int">2 </parameter>-->
  <parameter name="MinimumPulseLength" type="int">2 </parameter> <!--fix me/ too short?-->
  <!--Set to true, if the electronics register negative values; default is /false/.-->
  <parameter name="NegativeElectronicsPolarity" type="bool">false </parameter>
  <!--HACK! for now this sets the default value of the noise _AND_ turns off the pedestal collection usage!-->
  <parameter name="NoiseOverrideValue" type="int">1 </parameter> <!--?-->
  <!--Name of the output TrackerData collection only the data related to a pulse will be stored-->
  <parameter name="OutputTrackerDataCollectionName" type="string" lcioOutType="TrackerData">TPCDataInPulses </parameter>
  <!--Name of the output TrackerPulse collection-->
  <parameter name="OutputTrackerPulseCollectionName" type="string" lcioOutType="TrackerPulse">TPCPulses </parameter>
  <!--Name of the collection containing the pedestal information-->
  <parameter name="PedestalCollectionName" type="string">TPCPedestal </parameter>
  <!--Override pedestal width.-->
  <parameter name="PedestalWidthOverride" type="float">0.5 </parameter> <!--fix me-->
  <!--Override pedestal subtraction .-->
  <parameter name="IsPedestalSubtractedOverride" type="bool">1 </parameter> <!--Yes=1-->
  <!--Override pedestal value.-->
  <parameter name="PedestalValueOverride" type="float">0 </parameter>
  <!--A pulse ends if the ADC value is smaller or equal to this value times the pedestal width.-->
  <parameter name="PulseEndPedestalWidthFactor" type="float">3 </parameter><!--何シグマでパルスを終わらせるか-->
  <!--A pulse starts if the ADC value is above the given value times the pedestal width.-->
  <parameter name="PulseStartPedestalWidthFactor" type="float">3 </parameter><!-- パルスを始めるか-->
  <!--Frequency of the readout in MHz-->
  <parameter name="ReadoutFrequencyOverride" type="float">2.00e+01 </parameter><!--エレキで決まる 50ns/1bin-->
  <parameter name="SignalPolarityOverride" type="int">1 </parameter>
  <!--# bins saved after the end threshold (except there is another pulse)-->
  <parameter name="SaveNBinsAfterEnd" type="int">3 </parameter><!--post-->
  <!--# bins saved before start threshold (except there is another pulse)-->
  <parameter name="SaveNBinsBeforeStart" type="int">1 </parameter><!--pre-->
  <!-- Inflection point: 0(default), Fit parabola: 1, COG: 2, leading edge: 3, maximum: 4, const. fraction: 5 -->
  <parameter name="TimeCalculationMode" type="int">0 </parameter><!--study item-->
  <!--parameter name="TimeCalculationMode" type="int">1 </parameter-->
  <!--parameter name="TimeCalculationMode" type="int">2 </parameter-->
  <parameter name="TimeCalculationParameter" type="double"> 2.5 </parameter> <!--? serch code-->
  <!--if true the output collection is set transient-->
  <!--parameter name="SetOutputTransient" type="bool">true </parameter-->
  <parameter name="SetOutputTransient" type="bool">false </parameter>
  <!--Switch the default way the pulse time is calculated from the derivative sign change to charge average.-->
  <!--parameter name="UseChargeAveragedPulseTime" type="bool">false </parameter-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
</processor>


 <processor name="MyChannelMappingProcessor" type="ChannelMappingProcessor">
 <!--ChannelMappingProcessor changes cellID0 to map from hardware channel numbers to sowftware/logical channel numbers.-->
  <!--Name of the input collection-->
  <parameter name="InputCollectionName" type="string" lcioInType="TrackerPulse"> TPCPulses </parameter>
  <!--Name of the collection with the mapping-->
  <parameter name="ChannelMappingCollectionName" type="string" value="TPCChannelMapping"/>
  <!--Optional: Name of output collection-->
  <parameter name="OutputCollectionName" type="string" value="TPCPulsesMapped"/>
  <!--if not 0 the output collection is set transient (only if OutputCollectionName defined)-->
  <parameter name="RemoveChannelsWithoutMapping" type="bool" value="true"/>
  <parameter name="SetOutputTransient" type="int" value="0"/>
</processor>

 <processor name="MyRowBasedHitFinderProcessor" type="RowBasedHitFinderProcessor">
 <!--RowBasedHitFinderProcessor calculates TrackerHits from TrackerPulses-->
  <!--Name of the input TrackerPulses collection-->
  <parameter name="InputTrackerPulses" type="string" lcioInType="TrackerPulse"> TPCPulsesMapped </parameter>
  <!--Name of the output TrackerHits collection-->
  <parameter name="OutputTrackerHits" type="string" lcioOutType="TrackerHit"> TPCHits </parameter>
  <!--Optional: The charge conversion factor from ADC values to primary electrons-->
  <parameter name="ChargeConversionFactorOverride" type="float" value="1"/>
  <!--Optional: the gear pad indices of dead channels-->
  <parameter name="DeadPadsOverride" type="IntVec"> -999 </parameter> <!--write dead pad id-->
  <!--parameter name="DeadPads" type="IntVec"> </parameter-->
  <!--Optional: Name of the input collection containing the TPC conditions data-->
  <!--parameter name="InputTPCConditions" type="string" value="TPCConditions"/-->
  <!--Maximum number of dead pads in hit (default: 1)-->
  <parameter name="MaxDeadChannelsOverride" type="int" value="1"/>
  <!--Maximum time between pulses in a hit in ns (default: 200.)-->
  <parameter name="MaxTimeSpreadOverride" type="float" value="200"/><!--fix me-->
  <!--Minimum size of hit / Minimum number of Pads (default: 1)-->
  <!--<parameter name="MinHitSizeOverride" type="int" value="1"/>-->
  <parameter name="MinHitSizeOverride" type="int" value="2"/><!--efficiency?-->
  <!--Minimum size of the maximum slice value of the maximal pulse (in charge) in a hit.-->
  <parameter name="MinMaxPulseSliceHeightOverride" type="float" value="12"/><!--fix me-->
  <!--if not 0 the output hits collection is set transient (default: 0)-->
  <parameter name="SetOutputHitsTransient" type="bool" value="false"/>
  <!--Optional: Set drift velocity in case there is no conditions data in mm/mu s-->
  <parameter name="UseGlobalCoordinates" type="bool">true </parameter>
  <parameter name="VDriftOverride" type="float" value="75"/><!--fix me-->
</processor>

 <processor name="MyTrackMakingKalmanFilterProcessor" type="TrackMakingKalmanFilterProcessor">
 <!--For simple track finding and fitting by Kalman filter!-->
  <!--Name of the Input TrackerHits collection-->
  <parameter name="InputTrackerHits" type="string" lcioInType="TrackerHit"> TPCHits </parameter>
  <!--Name of the output Tracks collection-->
  <parameter name="OutputTracks" type="string" lcioOutType="Track"> TPCTracks </parameter>
  <!--Maximum number of chi2 increment (default: 30.)-->
  <parameter name="MaxDeltaChi2" type="double" value="600"/><!--本当はfix parameter-->
  <!--Maximum number of subsequnetly missing hits (default: 1)-->
  <parameter name="MaxSkipRows" type="int" value="5 "/><!--(fix me)-->
  <!--Minimum number of hits on track (default: 15)-->
  <!--parameter name="MinTrackHits" type="int" value="60"/-->
  <parameter name="MinTrackHits" type="int" value="10"/><!--(fix me)-->
  <!--if not 0 the output hits collection is set transient (default: 0)-->
  <!--parameter name="SetOutputHitsTransient" type="int" value="0"/-->
  <parameter name="SetOutputHitsTransient" type="int" value="0"/>
  <!--if not 0 the output trackscollection is set transient (default: 0)-->
  <!--parameter name="SetOutputTrackCandidatesTransient" type="int" value="0"/-->
  <parameter name="SetOutputTrackCandidatesTransient" type="int" value="0"/>
  <!--Track type (default: 1 0=straight line 1=helix)-->
  <parameter name="TrackType" type="int" value="1"/>
</processor>

<processor name="MyRootFileProcessor" type="RootFileProcessor">
  <!--Optional: modules to use-->
  <!--parameter name="ModulesToUseOverride" type="IntVec"> 0 1 2 3 4 5 6 </parameter-->
  <parameter name="ModulesToUseOverride" type="IntVec"> 3 </parameter>
  <!--parameter name="BadRowsOverride" type="IntVec"> 0 1 7 13 14 20 26 27 </parameter-->
  <!--parameter name="BadRowsOverride" type="IntVec"> 0 1 6 13 20 26 27 </parameter-->
  <!--parameter name="BadRowsOverride" type="IntVec"> 0 1 6 13 20 22 26 27 </parameter-->
  <!--<parameter name="BadRowsOverride" type="IntVec"> 0 22 27 </parameter>-->
  <parameter name="BadRowsOverride" type="IntVec"> 0 16 17 22 23 24 27 </parameter>
</processor>

<processor name="MyLCIOOutputProcessor" type="LCIOOutputProcessor">
 <!--Writes the current event to the specified LCIO outputfile. Needs to be the last ActiveProcessor.-->
  <!--drops the named collections from the event-->
  <!--parameter name="DropCollectionNames" type="StringVec"> TPCHits HCalHits </parameter-->
  <!--drops all collections of the given type from the event-->
  <!--parameter name="DropCollectionTypes" type="StringVec"> SimTrackerHit SimCalorimeterHit </parameter-->
  <!-- write complete objects in subset collections to the file (i.e. ignore subset flag)-->
  <!--parameter name="FullSubsetCollections" type="StringVec" value="MCParticlesSkimmed"/-->
  <!--force keep of the named collections - overrules DropCollectionTypes (and DropCollectionNames)-->
  <!--parameter name="KeepCollectionNames" type="StringVec" value="MyPreciousSimTrackerHits"/-->
  <!-- name of output file -->
  <parameter name="LCIOOutputFile" type="string" value="r19972.TPCTracks.slcio"/>
  <!--write mode for output file:  WRITE_APPEND or WRITE_NEW-->
  <parameter name="LCIOWriteMode" type="string" value="WRITE_NEW"/>
  <!--will split output file if size in kB exceeds given value - doesn't work with APPEND and NEW-->
  <!--parameter name="SplitFileSizekB" type="int" value="1992294"/-->
</processor>

</marlin>
